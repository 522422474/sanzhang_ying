// Code generated by protoc-gen-go.
// source: pb/server_msg.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ServerMsg struct {
	Client           *bool    `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	SrcId            *string  `protobuf:"bytes,2,opt,name=srcId" json:"srcId,omitempty"`
	DstId            []string `protobuf:"bytes,3,rep,name=dstId" json:"dstId,omitempty"`
	MsgId            *int32   `protobuf:"varint,4,opt,name=msgId" json:"msgId,omitempty"`
	MsgBody          []byte   `protobuf:"bytes,5,opt,name=msgBody" json:"msgBody,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ServerMsg) Reset()         { *m = ServerMsg{} }
func (m *ServerMsg) String() string { return proto.CompactTextString(m) }
func (*ServerMsg) ProtoMessage()    {}

func (m *ServerMsg) GetClient() bool {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return false
}

func (m *ServerMsg) GetSrcId() string {
	if m != nil && m.SrcId != nil {
		return *m.SrcId
	}
	return ""
}

func (m *ServerMsg) GetDstId() []string {
	if m != nil {
		return m.DstId
	}
	return nil
}

func (m *ServerMsg) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *ServerMsg) GetMsgBody() []byte {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

// 比赛结果
type MsgMatchResult struct {
	MatchType        *int32  `protobuf:"varint,1,req,name=matchType" json:"matchType,omitempty"`
	EarnGold         *int32  `protobuf:"varint,2,opt,name=earnGold" json:"earnGold,omitempty"`
	IsSNGEnd         *bool   `protobuf:"varint,3,opt,name=isSNGEnd" json:"isSNGEnd,omitempty"`
	MaxCards         []int32 `protobuf:"varint,4,rep,name=maxCards" json:"maxCards,omitempty"`
	CardType         *int32  `protobuf:"varint,5,opt,name=cardType" json:"cardType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgMatchResult) Reset()         { *m = MsgMatchResult{} }
func (m *MsgMatchResult) String() string { return proto.CompactTextString(m) }
func (*MsgMatchResult) ProtoMessage()    {}

func (m *MsgMatchResult) GetMatchType() int32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

func (m *MsgMatchResult) GetEarnGold() int32 {
	if m != nil && m.EarnGold != nil {
		return *m.EarnGold
	}
	return 0
}

func (m *MsgMatchResult) GetIsSNGEnd() bool {
	if m != nil && m.IsSNGEnd != nil {
		return *m.IsSNGEnd
	}
	return false
}

func (m *MsgMatchResult) GetMaxCards() []int32 {
	if m != nil {
		return m.MaxCards
	}
	return nil
}

func (m *MsgMatchResult) GetCardType() int32 {
	if m != nil && m.CardType != nil {
		return *m.CardType
	}
	return 0
}

// 锁定玩家
type MsgLockUser struct {
	Lock             *bool  `protobuf:"varint,1,opt,name=lock" json:"lock,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgLockUser) Reset()         { *m = MsgLockUser{} }
func (m *MsgLockUser) String() string { return proto.CompactTextString(m) }
func (*MsgLockUser) ProtoMessage()    {}

func (m *MsgLockUser) GetLock() bool {
	if m != nil && m.Lock != nil {
		return *m.Lock
	}
	return false
}

type MsgUpdateRechargeDiamond struct {
	Diamond          *int32 `protobuf:"varint,1,opt,name=diamond" json:"diamond,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgUpdateRechargeDiamond) Reset()         { *m = MsgUpdateRechargeDiamond{} }
func (m *MsgUpdateRechargeDiamond) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRechargeDiamond) ProtoMessage()    {}

func (m *MsgUpdateRechargeDiamond) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}
